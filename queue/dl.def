/*
    This file is part of VK/KittenDB-Engine.

    VK/KittenDB-Engine is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.

    VK/KittenDB-Engine is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with VK/KittenDB-Engine.  If not, see <http://www.gnu.org/licenses/>.

    This program is released under the GPL with the additional exemption
    that compiling, linking, and/or using OpenSSL is allowed.
    You are free to remove this exemption from derived works.

    Copyright 2010-2013 Vkontakte Ltd
              2010-2013 Arseny Smirnov
              2010-2013 Aliaksei Levin
*/

#define _FILE_OFFSET_BITS 64
#include "dl-hashable.h"


#define TA pli
#define dl_scmp_pli(a, b) ((a).x > (b).x)
#define dl_eq_pli(a, b) ((a).x == (b).x)
#include "dl-sort.def"
#include "dl-undef.h"


#include "dl-vector-def.h"
#include "dl-crypto.h"
#include "dl-treap.h"

/*
 * pair <string, vptr>
 */
#define TA dl_string
#define TB vptr
#define TNAME shmap_pair_string_vptr
#define DL_COMPARABLE_OFF
#if defined (DL_HEADER)
#  include "dl-pair.h"
#else
#  include "dl-pair.c"
#endif
#define dl_hash_shmap_pair_string_vptr(p) (dl_hash_dl_string((p).x))
#include "dl-undef.h" 


/*
 * strict_hash_map <string, vptr>
 *
 */
#define DATA_T shmap_pair_string_vptr
#define TNAME shmap_string_vptr
#define IMPLEMENTATION OPEN
#define STORE_HASH ON
#define STRICT ON
#define RESIZABLE ON
#define dl_eq_shmap_pair_string_vptr(a, b) !strcmp((a).x, (b).x)

#if defined (DL_HEADER)
#  include "dl-hashtable.h"
#else
#  include "dl-hashtable.c"
#endif

#include "dl-undef.h"


/*
 *
 * hash_map <ll, vptr>
 *
 */
#define DATA_T ll
#define RDATA_T vptr
#define TNAME map_ll_vptr
#define IMPLEMENTATION OPEN
#define STORE_HASH OFF
#define STRICT OFF
#define WAIT_FREE OFF
#define MAP ON
#define EMPTY(p) (p == 0)

#if defined (DL_HEADER)
#  include "dl-hashtable.h"
#else
#  include "dl-hashtable.c"
#endif

#include "dl-undef.h"


/*
 *
 * hash_map <int, int>
 *
 */
#define DATA_T int
#define RDATA_T int
#define TNAME map_int_int
#define IMPLEMENTATION OPEN
#define STORE_HASH OFF
#define STRICT OFF
#define WAIT_FREE OFF
#define MAP ON
#define EMPTY(p) (p == 0)

#if defined (DL_HEADER)
#  include "dl-hashtable.h"
#else
#  include "dl-hashtable.c"
#endif

#include "dl-undef.h"


/*
 *
 * hash_set <int*>
 *
 */
typedef long long *llp;
#define dl_hash_llp(p) (*p)
#define DATA_T llp
#define TNAME hset_llp
#define IMPLEMENTATION OPEN
#define STORE_HASH OFF
#define STRICT OFF
#define RESIZABLE ON
#define WAIT_FREE OFF
#define EMPTY(p) (p == NULL)

#if defined (DL_HEADER)
#  include "dl-hashtable.h"
#else
#  include "dl-hashtable.c"
#endif

#include "dl-undef.h"

/*
 *
 * hash_map <string, int>
 *
 */

#define DATA_T dl_string
#define RDATA_T int
#define TNAME map_string_int
#define IMPLEMENTATION OPEN
#define STORE_HASH ON
#define STRICT OFF
#define RESIZABLE ON
#define MAP ON

#if defined (DL_HEADER)
#  include "dl-hashtable.h"
#else
#  include "dl-hashtable.c"
#endif

#include "dl-undef.h"
